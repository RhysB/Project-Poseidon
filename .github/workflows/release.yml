name: Release Workflow

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up JDK 1.8
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8

      # Step 3: Get the version from pom.xml
      - name: Get the version from pom.xml
        id: get_version
        run: echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      # Step 4: Fail if snapshot version
      - name: Fail if snapshot version
        run: |
          if [[ $PROJECT_VERSION == *"-SNAPSHOT"* ]]; then
            echo "Snapshot versions are not releasable"
            exit 0
          fi

      # Step 5: Generate custom release version
      - name: Generate Release Version
        id: release_version
        run: |
          DATE=$(date +'%y%m%d-%H%M')
          SHA=$(echo $GITHUB_SHA | cut -c1-7)
          RELEASE_VERSION="${PROJECT_VERSION}-${DATE}-${SHA}"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      # Step 6: Create version.properties file
      - name: Create version.properties file
        run: |
          mkdir -p src/main/resources
          echo "version=${{ env.RELEASE_VERSION }}" > src/main/resources/version.properties
          echo "date=$(date +'%Y-%m-%d %H:%M:%S')" >> src/main/resources/version.properties
          echo "sha=${GITHUB_SHA}" >> src/main/resources/version.properties
          echo "release_tag=${{ env.RELEASE_VERSION }}" >> src/main/resources/version.properties
          
          # Determine build type
          if [[ "${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == "refs/heads/main" ]]; then
            BUILD_TYPE="production"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BUILD_TYPE="pull_request"
          else
            BUILD_TYPE="development"
          fi
          
          echo "build_type=${BUILD_TYPE}" >> src/main/resources/version.properties

      # Step 7: Build with Maven
      - name: Build with Maven
        run: mvn clean package

      # Step 8: Create GitHub Release
      - name: Create GitHub Release
        if: ${{ !endsWith(env.PROJECT_VERSION, '-SNAPSHOT') }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: ${{ env.RELEASE_VERSION }}
          files: |
            target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}